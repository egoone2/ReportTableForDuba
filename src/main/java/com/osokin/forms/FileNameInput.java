package com.osokin.forms;

import com.osokin.exceptions.RegionNameException;
import com.osokin.paramsIssues.ParamSender;
import com.osokin.resultData.ResultForOneOrder;


import javax.swing.*;
import java.awt.*;
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.text.ParseException;
import java.util.ArrayList;
import java.util.List;

public class FileNameInput extends JFrame {
    private JTextField textField1;
    private JButton confirmButton;
    private JPanel mainPanel;
    private JButton executeButton;
    private JTextField exactLineTextField;

    private JButton showDataButton;
    private JLabel lineLabel;
    private BufferedReader reader;
    private List<ResultForOneOrder> results;

    public FileNameInput() {
        setContentPane(mainPanel);
        setTitle("Отчет");
        setSize(500, 250);
        setDefaultCloseOperation(WindowConstants.EXIT_ON_CLOSE);
        executeButton.setVisible(false);
        exactLineTextField.setVisible(false);
        showDataButton.setVisible(false);
        lineLabel.setVisible(false);
        setVisible(true);

        confirmButton.addActionListener(e -> {
            try {
                reader = new BufferedReader(new FileReader(textField1.getText()));
                executeButton.setVisible(true);
            } catch (FileNotFoundException ex) {
                new FileNotFoundForm();
                throw new RuntimeException(ex);
            }
        });
        executeButton.addActionListener(e -> {
            executeButtonAction();
            exactLineTextField.setVisible(true);
            showDataButton.setVisible(true);
            lineLabel.setVisible(true);
        });

        showDataButton.addActionListener(e -> {
            showChosenDeliveryCost();
        });
    }

    private void showChosenDeliveryCost() {
        int[] linesArr = getIntArray(exactLineTextField.getText().split(" "));
        for (int i : linesArr) {
            System.out.println(results.get(i).getDeliveryCost());
        }
    }

    private int[] getIntArray(String[] lines) {
        int[] arr = new int[lines.length];
        for (int i = 0; i < lines.length; i++) {
            arr[i] = Integer.parseInt(lines[i]) - 2;
        }

        return arr;
    }

    private void executeButtonAction() {
        results = new ArrayList<>();
        try {
            while (reader.ready()) {
                String params = reader.readLine();
                ParamSender.sendParamsLine(params, results);
            }
        } catch (IOException | RegionNameException | ParseException e) {
            throw new RuntimeException(e);
        }
        String[][] table = convertToMatrix(results);
        new ResultTableFrame(table);
    }

    private String[][] convertToMatrix(List<ResultForOneOrder> list) {
        int height = list.size();
        int width = list.get(0).getArr().length;
        String[][] table = new String[height][width];

        for (int i = 0; i < height; i++) {
            table[i] = list.get(i).getArr();
        }
        return table;
    }


    {
// GUI initializer generated by IntelliJ IDEA GUI Designer
// >>> IMPORTANT!! <<<
// DO NOT EDIT OR ADD ANY CODE HERE!
        $$$setupUI$$$();
    }

    /**
     * Method generated by IntelliJ IDEA GUI Designer
     * >>> IMPORTANT!! <<<
     * DO NOT edit this method OR call it in your code!
     *
     * @noinspection ALL
     */
    private void $$$setupUI$$$() {
        mainPanel = new JPanel();
        mainPanel.setLayout(new com.intellij.uiDesigner.core.GridLayoutManager(10, 2, new Insets(0, 0, 0, 0), -1, -1));
        final JLabel label1 = new JLabel();
        label1.setText("Введите полный путь к файлу");
        mainPanel.add(label1, new com.intellij.uiDesigner.core.GridConstraints(0, 0, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        confirmButton = new JButton();
        confirmButton.setText("Подтвердить");
        mainPanel.add(confirmButton, new com.intellij.uiDesigner.core.GridConstraints(3, 0, 4, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        executeButton = new JButton();
        executeButton.setText("Выполнить ");
        mainPanel.add(executeButton, new com.intellij.uiDesigner.core.GridConstraints(3, 1, 4, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        textField1 = new JTextField();
        mainPanel.add(textField1, new com.intellij.uiDesigner.core.GridConstraints(0, 1, 3, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        lineLabel = new JLabel();
        lineLabel.setText("Введите номер интересующих строк через пробел");
        mainPanel.add(lineLabel, new com.intellij.uiDesigner.core.GridConstraints(7, 0, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
        exactLineTextField = new JTextField();
        mainPanel.add(exactLineTextField, new com.intellij.uiDesigner.core.GridConstraints(9, 0, 1, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_WEST, com.intellij.uiDesigner.core.GridConstraints.FILL_NONE, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_WANT_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, new Dimension(150, -1), null, 0, false));
        showDataButton = new JButton();
        showDataButton.setText("Показать данные");
        mainPanel.add(showDataButton, new com.intellij.uiDesigner.core.GridConstraints(7, 1, 2, 1, com.intellij.uiDesigner.core.GridConstraints.ANCHOR_CENTER, com.intellij.uiDesigner.core.GridConstraints.FILL_HORIZONTAL, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_SHRINK | com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_CAN_GROW, com.intellij.uiDesigner.core.GridConstraints.SIZEPOLICY_FIXED, null, null, null, 0, false));
    }

    /**
     * @noinspection ALL
     */
    public JComponent $$$getRootComponent$$$() {
        return mainPanel;
    }
}
